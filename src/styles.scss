/* You can add global styles to this file, and also import other style files */
@import 'themes/common/common.scss';
@import "../node_modules/angular-calendar/css/angular-calendar.css";
/*---- ngx-datatable CSS import -----*/
// @import '~@swimlane/ngx-datatable/release/index.css';
// @import '~@swimlane/ngx-datatable/release/themes/material.css';
// @import '~@swimlane/ngx-datatable/release/assets/icons.css';
@import "../node_modules/angular-calendar/scss/angular-calendar.scss";
@import "../node_modules/flatpickr/dist/flatpickr.css";
@import '~css-star-rating/scss/star-rating';

@include respond-to('x-small') {
  .ngx-datatable.material {
    .datatable-footer {
      .datatable-pager {
        margin: 0 10px 0 0;
        a {
          min-width: 16px;
          padding: 0 0;
          margin: 6px 1px;
        }
        .datatable-icon-prev {
          font-size: 20px;
          padding: 0 0;
        }
      }
      .page-count {
        padding: 0 0 0 0.5rem;
      }
    }
  }
}

body {
  position: relative;
  margin: 0;
  line-height: 1.5;
  font-family: 'Lato', sans-serif;
}

p { margin: 0 0 1rem; }

.hidden { display: none !important; }

/*---- Margins -----*/
.m-0 { margin: 0 !important; }

.mb-0 { margin-bottom: 0 !important; }

.mt-0 { margin-top: 0 !important }

.m-0-auto { margin: 0 auto }

.mt-5 { margin-top: 0.5rem !important; }

.ml-2 { margin-left: .2rem !important; }

.ml-5 { margin-left: 0.5rem !important; }

.mr-5 { margin-right: 0.5rem !important; }

.mt-1 { margin-top: 1rem !important; }

.mb-1 { margin-bottom: 1rem !important; }

.ml-1 { margin-left: 1rem !important; }

.mr-1 { margin-right: 1rem !important; }

.mb-12 { margin-bottom: 12px !important; }

.my-1 {
  margin-top: 1rem !important;
  margin-bottom: 1rem !important;
}

/*---- Paddings -----*/

.p-0 { padding: 0 !important; }

.p-1 { padding: 1rem !important; }

.pr-1 { padding-right: 1rem !important; }

.pl-1 { padding-left: 1rem !important; }

.pt-1 { padding-top: 1rem; }

.pb-1 { padding-bottom: 1rem; }

.p-3 { padding: 3px !important; }

.px-1 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-1 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.ptb-5 {
  padding-top: 5px !important;
  padding-bottom: 5px !important;
}

.plr-10 {
  padding-left: 10px !important;
  padding-right: 10px !important;
}
/*---- End Paddings -----*/

.mat-h3--light {
  font-size: 22px;
  font-weight: 400;
}

.font--20 { font-size: 20px; }

.text-center { text-align: center; }

.line-height-12 { line-height: 12px !important; }

a { text-decoration: none; }

.font-weight--500 { font-weight: 500 !important; }

.mat-checkbox-layout { white-space: initial !important; }

.border-radius--50 { border-radius: 50%; }

.pointer--cursor { cursor: pointer;}

.mat-card {
  margin: 0.33rem;
  padding: 24px;
  &.default {
    padding: 0;
    .mat-card-title {
      padding: 1rem 1rem 0 1rem;
      font-size: 1rem;
    }
  }
}

.icon--48{
  .mat-icon {
      @include size(48px);
      line-height: 48px;
      text-align: center;
  }
}

@include respond-to('x-small') {
  .list--scroll {
    box-shadow: none;
    .mat-card-content {
      overflow: auto;
    }
    .mat-list,
    .mat-table,
    .mat-stepper-horizontal {
      min-width: 490px;
      overflow-x: auto;
      overflow-y: hidden;
    }
  }
  
  .mat-card {
    margin: 0.22rem 0 !important;
    padding: 24px;
    font-family: 'Lato', sans-serif;
    box-shadow: none;
  }

  .mat-elevation-z1{
    box-shadow: none;
  }
  .m-0 { margin: 0 !important; }

  .mr-1 { margin-right: 1rem !important; }
}

/*---- Perfect Scrollbar -----*/
perfect-scrollbar > .ps.ps--active-y>.ps__rail-y {
  left: auto !important;
}


//---------------------DRAGULA------------------------------------
/* in-flight clone */
.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
  pointer-events: none;
}
/* high-performance display:none; helper */
.gu-hide {
  left: -9999px !important;
}
/* added to mirrorContainer (default = body) while dragging */
.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}
/* added to the source element while its mirror is dragged */
.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}


